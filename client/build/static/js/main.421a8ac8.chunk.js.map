{"version":3,"sources":["components/Nav/index.js","components/Jumbotron/Jumbotron.js","components/Grid/Grid.js","components/BookSearch/index.js","utils/API.js","pages/Books.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","react_router_dom","to","window","location","pathname","Jumbotron","_ref","children","style","height","clear","paddingTop","textAlign","Container","fluid","concat","Row","_ref2","Input","props","Object","assign","FormBtn","float","marginBottom","API","search","query","axios","get","getBooks","getBook","id","deleteBook","delete","saveBook","bookData","post","Books","state","books","title","authors","description","image","link","searchBooks","then","res","_this","setState","catch","err","console","log","handleInputChange","event","value","target","name","defineProperty","handleFormSubmit","preventDefault","Jumbotron_Jumbotron","this","onChange","placeholder","onClick","Component","loadBooks","data","author","length","map","book","key","_id","App","components_Nav","react_router","exact","path","component","Saved","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"0QAmCeA,MA/Bf,WACE,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,KAAlC,sBAGAL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,IACHF,UAC+B,MAA7BG,OAAOC,SAASC,UAAiD,YAA7BF,OAAOC,SAASC,SAChD,2BACA,qBALR,UAUAR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,SACHF,UAAwC,WAA7BG,OAAOC,SAASC,SAAwB,2BAA6B,sBAFlF,6DCTGC,MAXf,SAAAC,GAAiC,IAAZC,EAAYD,EAAZC,SACnB,OACEX,EAAAC,EAAAC,cAAA,OACEU,MAAO,CAAEC,OAAQ,IAAKC,MAAO,OAAQC,WAAY,IAAKC,UAAW,UACjEb,UAAU,aAETQ,ICHA,SAASM,EAATP,GAAwC,IAAnBQ,EAAmBR,EAAnBQ,MAAOP,EAAYD,EAAZC,SACjC,OAAOX,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAAgB,OAAcD,EAAQ,SAAW,KAAOP,GAIxD,SAASS,EAATC,GAAkC,IAAnBH,EAAmBG,EAAnBH,MAAOP,EAAYU,EAAZV,SAC3B,OAAOX,EAAAC,EAAAC,cAAA,OAAKC,UAAS,MAAAgB,OAAQD,EAAQ,SAAW,KAAOP,GCPlD,SAASW,EAAMC,GACpB,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,QAAAsB,OAAAC,OAAA,CAAOtB,UAAU,gBAAmBoB,KAKnC,SAASG,EAAQH,GACtB,OACEvB,EAAAC,EAAAC,cAAA,SAAAsB,OAAAC,OAAA,GAAYF,EAAZ,CAAmBX,MAAO,CAAEe,MAAO,QAASC,aAAc,IAAMzB,UAAU,oBACvEoB,EAAMZ,8BCXEkB,EAAA,CACbC,OAAQ,SAAUC,GAChB,OAAOC,IAAMC,IALD,gDAKeF,EAJhB,iDAOXG,SAAU,WACV,OAAOF,IAAMC,IAAI,eAGnBE,QAAS,SAAUC,GACjB,OAAOJ,IAAMC,IAAI,cAAgBG,IAGnCC,WAAY,SAAUD,GACpB,OAAOJ,IAAMM,OAAO,cAAgBF,IAGtCG,SAAU,SAAUC,GAClB,OAAOR,IAAMS,KAAK,aAAcD,KCoDrBE,6MAjEbC,MAAQ,CACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,MAAO,GACPC,KAAM,GACNnB,OAAQ,gBAGVoB,YAAc,SAAAnB,GACZF,EAAIC,OAAOC,GACRoB,KAAK,SAAAC,GAAG,OAAIC,EAAKC,SAAS,CAAEV,MAAOQ,MACnCG,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG9BG,kBAAoB,SAAAC,GAClB,IAAMC,EAAQD,EAAME,OAAOD,MACrBE,EAAOH,EAAME,OAAOC,KAC1BV,EAAKC,SAAL9B,OAAAwC,EAAA,EAAAxC,CAAA,GACGuC,EAAOF,OAIZI,iBAAmB,SAAAL,GACjBA,EAAMM,iBACNb,EAAKH,YAAYG,EAAKV,MAAMb,iFAM5B,OACE9B,EAAAC,EAAAC,cAACe,EAAD,CAAWC,OAAK,GACdlB,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAACiE,EAAD,MACAnE,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACoB,EAAD,CACEuC,MAAOO,KAAKzB,MAAMb,OAClBuC,SAAUD,KAAKT,kBACfI,KAAK,SACLO,YAAY,gBAEdtE,EAAAC,EAAAC,cAACwB,EAAD,CAEE6C,QAASH,KAAKH,kBAFhB,YAQJjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACiE,EAAD,KACEnE,EAAAC,EAAAC,cAAA,uCAvDMsE,aCgEL9B,6MAhEbC,MAAQ,CACNC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,YAAa,GACbC,MAAO,GACPC,KAAM,MAORwB,UAAY,WACVhB,QAAQC,IAAI,iBACZ7B,EAAIK,WACDiB,KAAK,SAAAC,GAAG,OACPC,EAAKC,SAAS,CAAEV,MAAOQ,EAAIsB,KAAM7B,MAAO,GAAI8B,OAAQ,GAAI5B,YAAa,OAEtEQ,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFAT5BY,KAAKK,6CAcL,OACEzE,EAAAC,EAAAC,cAACe,EAAD,CAAWC,OAAK,GACdlB,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACiE,EAAD,OAEFnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACiE,EAAD,KACEnE,EAAAC,EAAAC,cAAA,0BAEDkE,KAAKzB,MAAMC,MAAMgC,OAChB5E,EAAAC,EAAAC,cAAA,UACGkE,KAAKzB,MAAMC,MAAMiC,IAAI,SAAAC,GAAI,OACxB9E,EAAAC,EAAAC,cAAA,MAAI6E,IAAKD,EAAKE,KACZhF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAI,UAAYyE,EAAKE,KACzBhF,EAAAC,EAAAC,cAAA,cACG4E,EAAKjC,MADR,OACmBiC,EAAKH,aAQhC3E,EAAAC,EAAAC,cAAA,qCAINF,EAAAC,EAAAC,cAACkB,EAAD,KACEpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,mCAvDQmE,aCeLS,MAff,WACI,OACJjF,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACAJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,eACMF,EAAAC,EAAAC,cAACgF,EAAD,MACAlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACEnF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5C,IACjC1C,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC,QCL1CC,EAAcC,QACW,cAA7BnF,OAAOC,SAASmF,UAEe,UAA7BpF,OAAOC,SAASmF,UAEhBpF,OAAOC,SAASmF,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT1C,KAAK,SAAA8C,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxD,QACfmD,UAAUC,cAAcO,WAK1B7C,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBH,MAAM,SAAAgD,GACL9C,QAAQ8C,MAAM,4CAA6CA,KChEjEC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwBxG,OAAOC,UAC3CwG,SAAWzG,OAAOC,SAASwG,OAIvC,OAGFzG,OAAO0G,iBAAiB,OAAQ,WAC9B,IAAMnB,EAAK,GAAA1E,OAAM2F,GAAN,sBAENtB,EAwCX,SAAiCK,GAE/BoB,MAAMpB,GACH1C,KAAK,SAAA+D,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQnF,IAAI,gBAAgBoF,QAAQ,cAG7CvB,UAAUC,cAAcuB,MAAMnE,KAAK,SAAA8C,GACjCA,EAAasB,aAAapE,KAAK,WAC7B7C,OAAOC,SAASiH,aAKpB5B,EAAgBC,KAGnBtC,MAAM,WACLE,QAAQC,IACN,mEAzDA+D,CAAwB5B,GAHxBD,EAAgBC,MC7BxB6B","file":"static/js/main.421a8ac8.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Google Book Search\n      </Link>\n      <div>\n        <div className=\"navbar-nav\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/search\"\n                  ? \"nav-link nav-item active\"\n                  : \"nav-link nav-item\"\n              }\n            >\n              Search\n            </Link>\n            <Link\n              to=\"/saved\"\n              className={window.location.pathname === \"/saved\" ? \"nav-link nav-item active\" : \"nav-link nav-item \"}\n            >\n              Saved\n            </Link>\n        </div>\n      </div>\n\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n","import React from 'react';\n\n// import 'components/BookSearch/BookSearch.css';\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import axios from \"axios\";\nconst BASEURL = \"http://www.googleapis.com/books/v1/volumes?q=\";\nconst APIKEY = \"&key=AIzaSyAqbCKQVTbfXn0WgQD89e3cbxShUvmFZm4\";\n\nexport default {\n  search: function (query) {\n    return axios.get(BASEURL + query + APIKEY);\n  },\n    // Gets all books\n    getBooks: function () {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function (id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function (id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function (bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React, { Component } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron/Jumbotron\";\nimport { Row, Container } from \"../components/Grid/Grid\";\nimport { Input, FormBtn} from \"../components/BookSearch\"\nimport API from \"../utils/API\";\n// import { Link } from \"react-router-dom\";\n\nclass Books extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    authors: [],\n    description: \"\",\n    image: \"\",\n    link: \"\",\n    search: \"Learn Java\"\n  };\n\n  searchBooks = query => {\n    API.search(query)\n      .then(res => this.setState({ books: res }))\n      .catch(err => console.log(err));\n  }\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchBooks(this.state.search);\n  };\n\n\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <div className=\"col-md-8 offset-md-2\">\n            <Jumbotron />\n            <form>\n              <Input\n                value={this.state.search}\n                onChange={this.handleInputChange}\n                name=\"search\"\n                placeholder=\"Search Here\"\n              />\n              <FormBtn\n                // disabled={!(this.state.author && this.state.title)}\n                onClick={this.handleFormSubmit}\n              >\n                Search\n              </FormBtn>\n            </form>\n          </div>\n          <div className=\"md-8 offset-md-2 sm-12\">\n            <Jumbotron>\n              <h1>Search Results</h1>\n            </Jumbotron>\n          </div>\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\n\nexport default Books;","import React, { Component } from \"react\";\n// import DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron/Jumbotron\";\nimport {Row, Container } from \"../components/Grid/Grid\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\n\nclass Books extends Component {\n  state = {\n    books: [],\n    title: \"\",\n    authors: [],\n    description: \"\",\n    image: \"\",\n    link: \"\",\n  };\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  loadBooks = () => {\n    console.log(\"loading books\")\n    API.getBooks()\n      .then(res =>\n        this.setState({ books: res.data, title: \"\", author: \"\", description: \"\" })\n      )\n      .catch(err => console.log(err));\n  };\n\n  render() {\n\n    return (\n      <Container fluid>\n        <Row>\n          <div className=\"col-md-12\">\n            <Jumbotron />\n          </div>\n          <div className=\"col-md-6 col-sm-12\">\n            <Jumbotron>\n              <h1>Saved Books</h1>\n            </Jumbotron>\n            {this.state.books.length ? (\n              <ul>\n                {this.state.books.map(book => (\n                  <li key={book._id}>\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </Link>\n                    {/* <DeleteBtn onClick={() => this.deleteBook(book._id)} /> */}\n                  </li>\n                ))}\n              </ul>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </div>\n        </Row>\n        <Row>\n          <div className=\"col-md-2\">\n            <Link to=\"/\">← Back to Search</Link>\n          </div>\n        </Row>\n      </Container>\n    )\n  }\n\n}\n\n\nexport default Books;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport Books from \"./pages/Books\";\nimport Saved from \"./pages/Saved\";\n\nfunction App() {\n    return (\n<Router>\n<div>\n  <header></header>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Books} />\n          <Route exact path=\"/saved\" component={Saved} />\n        </Switch>\n      </div>\n</Router>\n    );\n  }\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}